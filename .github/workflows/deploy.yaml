name: Build and deploy fasit

on:
  push

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/fasit:${{ github.sha }}
permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Cache Maven dependencies
        uses: actions/cache@preview
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: '8.0.x'
      - name: Test
        run: mvn test  -B -e -X

  build:
    name: Build and public docker image
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build artifact
        run: mvn package -DskipTests=true -B

      - name: Build docker image
        run: docker build  --tag ${IMAGE} .
      
      - name: Login to Github package registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$GITHUB_TOKEN" | docker login docker.pkg.github.com -u "$GITHUB_REPOSITORY" --password-stdin
      
      - name: Push docker image
        run: docker push ${IMAGE}

  deploy-dev:
     name: Deploy to dev-fss
     needs: build
     if: github.ref == 'refs/heads/master'
     runs-on: ubuntu-latest
     steps:
        - uses: actions/checkout@v2
        - uses: nais/deploy/actions/deploy@v1
          env:
            CLUSTER: dev-fss
            RESOURCE: nais/naiserator.yml
            VAR: image=${IMAGE}
            VARS: nais/dev-config.json

  deploy-prod:
    name: Deploy to prod-fss
    needs: deploy-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          CLUSTER: prod-fss
          RESOURCE: nais/naiserator.yml
          VAR: image=${IMAGE}
          VARS: nais/prod-config.json